/*
=====
3 : 招聘会人数
=====
总时间限制:
1000ms
内存限制:
65536kB
描述
某招聘机构举办招聘活动，事先不知道参会的确切人数。为了今后类似的招聘活动选择适当大小的场馆，招聘机构拟对每位参会人的进出场馆时间进行记录。设第i 个人进入会场的时间和离开会场的时间分别是xi, yi，那么，这个人在招聘会场的时间段t满足 xi <= t < yi。为简便起见，进出时间点用整数表示，且满足 0 <= xi < yi < 1000。请统计，在这一天的招聘活动中，参会的总人数有多少；高峰时，最多有多少人同时在场。

输入
数据包括2行，这2行的数据个数相同：
第1行表示第i个人的到达时间xi，数之间用逗号间隔；
后1行表示第i个人的对应的离开时间yi，数之间也用逗号间隔。
例如：
2,5,4,6,7,3,1,6,2
5,6,7,7,8,4,3,9,4

表示有9个人，进出场的时间分别是：
[2,5),[5,6),[4,7),[6,7),[7,8),[3,4),[1,3),[6,9),[2,4)
输出
参加会议的总人数以及最多有多少人同时在场，两者之间以空格间隔。
上面例子中，参加会议的总人数为9人，最多的时候有3人同时在场。如，时间段：[2,5),[1,3),[2,4)
样例输入
2,5,4,6,7,3,1,6,2
5,6,7,7,8,4,3,9,4
样例输出
9 3
提示
总人数不超过1000人。
*/

#include <iostream>
#include <stdio.h>
using namespace std;

int main() {
    const int maxn=1001;
    // t[i]表示时间i的人数流动情况，有人进来就加1，出去就减1，
    // ={}是为了把其初值全赋为0
    int sum, ans, i, x, end, t[maxn] = {};
    cin>>x;
    i=1;
    t[x]++;
    while (scanf(",%d", &x)>0) {
        t[x]++;
        i++;
    }
    cout << i << ' ';

    cin >> x;
    t[x]--;
    end = x; // 招聘会结束时间
    while (scanf(",%d", &x)>0) {
        t[x]--;
        if(x>end) {
            end=x;
        }
    }

    ans = sum = t[0];
    for (i=1; i<end; i++) {
        // sum=t[0]+...+t[i]表示到时间i时场内的人数
        sum += t[i];
        if(sum>ans){
            ans = sum;
        }
    }
    cout << ans;

    return 0;
}
