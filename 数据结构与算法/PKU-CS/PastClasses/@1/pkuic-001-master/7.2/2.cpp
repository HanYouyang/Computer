/*
=====
第2题：7:中位数
=====

总时间限制:
    2000ms
内存限制:
    65536kB

描述

    中位数定义：一组数据按从小到大的顺序依次排列，处在中间位置的一个数或最中间两个数据的平均值（如果这组数的个数为奇数，则中位数为位于中间位置的那个数；如果这组数的个数为偶数，则中位数是位于中间位置的两个数的平均值）.
    给出一组无序整数，求出中位数，如果求最中间两个数的平均数，向下取整即可（不需要使用浮点数）
输入
    该程序包含多组测试数据，每一组测试数据的第一行为N，代表该组测试数据包含的数据个数，1 <= N <= 15000.（原来为1<=N<=10000，经测试确认，系统确实有10001的测试数据，因此将题面修改过来。百练上相同题目的题面也已经修改。）
    接着N行为N个数据的输入，N=0时结束输入
输出
    输出中位数，每一组测试数据输出一行
提示
    建议使用输入一组数据就输出一次答案的方式，openjudge上输入和输出是分开的。我也建议以后做题大家都这么做，不要拿数组保存答案一并输出了。——助教
样例输入

    4
    10
    30
    20
    40
    3
    40
    30
    50
    4
    1
    2
    3
    4
    0

样例输出

    25
    40
    2

*/

#include <iostream>
using namespace std;

int main() {
    int N;
    int array[15000];
    while (cin >> N) {
        if (N == 0) {
            break;
        }
        for (int i=0; i<N; i++) {
            cin >> array[i];
        }
        for (int i=0; i<N-1; i++) {
            for (int j=0; j<N-1-i; j++) {
                if (array[j] > array[j+1]) {
                    int tmp = array[j+1];
                    array[j+1] = array[j];
                    array[j] = tmp;
                }
            }
        }
        if (N % 2 == 0) {
            cout << (array[N/2 - 1] + array[N/2]) / 2 << endl;
        } else {
            cout << array[N/2] << endl;
        }
    }

    return 0;
}
